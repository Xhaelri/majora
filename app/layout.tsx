import type { Metadata } from "next";
import { Libre_Franklin } from "next/font/google";
import "./globals.css";
import ThemeContextProvider from "../context/Theme";
import Header from "@/components/Header/Header";
import Footer from "@/components/Footer/Footer";
import { Providers } from "@/redux/storeProvider";
import { Toaster } from "@/components/ui/sonner";
import { SessionProvider } from "next-auth/react";
import { auth } from "@/auth";
import { CartProvider } from "@/context/CartContext";
// REMOVED: import CartMergeHandler from "@/hooks/cartMerge";

const libre = Libre_Franklin({
  subsets: ["latin"],
  weight: ["100", "200", "300", "400", "500", "600", "700", "800", "900"],
  variable: "--font-antic",
  display: "swap",
});

export const metadata: Metadata = {
  title: "SEKRA",
  description: "Generated by create next app",
};

export default async function RootLayout({
  children,
}: Readonly<{
  children: React.ReactNode;
}>) {
  const session = await auth();

  return (
    <html lang="en">
      <body className={` ${libre.variable} ${libre.className} antialiased `}>
        <SessionProvider session={session}>
          <CartProvider>
            <Providers>
              <ThemeContextProvider>
                <Header />
                <Toaster position="top-right" richColors />
                {children}
                {/* REMOVED: <CartMergeHandler /> */}
                <Footer />
              </ThemeContextProvider>
            </Providers>
          </CartProvider>
        </SessionProvider>
      </body>
    </html>
  );
}
// Font files can be colocated inside of `app`

// const playfair = Playfair_Display({
//   subsets: ["latin"],
//   weight: ["400", "500", "600", "700", "800", "900"],
//   variable: "--font-playfair",
//   display: "swap",
// });

// const antic = Antic_Didone({
//   subsets: ["latin"],
//   weight: ["400"],
//   variable: "--font-antic",
//   display: "swap",
// });
// const cormorant = Cormorant_Infant({
//   subsets: ["latin"],
//   weight: ["400"],
//   variable: "--font-antic",
//   display: "swap",
// });

// const roboto_flex = Roboto_Flex({
//   subsets: ["latin"],
//   variable: "--font-playfair",
//   display: "swap",
//   weight: ["100","200","300","400", "500", "600", "700", "800", "900"],
// });

// const montserrat = Montserrat({
//   subsets: ["latin"],
//   weight: ["300", "400", "500", "600", "700", "800", "900"],
//   variable: "--font-montserrat",
//   display: "swap",
// });
